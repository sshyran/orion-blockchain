/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var order_pb = require('./order_pb.js');
goog.object.extend(proto, order_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.dex.grpc.integration.AssetDescription', null, global);
goog.exportSymbol('proto.dex.grpc.integration.AssetDescriptionResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.AssetIdRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.BroadcastRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.BroadcastResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.Exception', null, global);
goog.exportSymbol('proto.dex.grpc.integration.ExchangeTransaction', null, global);
goog.exportSymbol('proto.dex.grpc.integration.ForgedOrderRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.ForgedOrderResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.HasAddressScriptRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.HasScriptResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.IsFeatureActivatedRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.IsFeatureActivatedResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.RunAddressScriptRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.RunAssetScriptRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.RunScriptResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.SignedExchangeTransaction', null, global);
goog.exportSymbol('proto.dex.grpc.integration.SpendableAssetBalanceRequest', null, global);
goog.exportSymbol('proto.dex.grpc.integration.SpendableAssetBalanceResponse', null, global);
goog.exportSymbol('proto.dex.grpc.integration.TransactionStatus', null, global);
goog.exportSymbol('proto.dex.grpc.integration.TransactionStatus.Status', null, global);
goog.exportSymbol('proto.dex.grpc.integration.TransactionsByIdRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.TransactionsByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dex.grpc.integration.TransactionsByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.dex.grpc.integration.TransactionsByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.TransactionsByIdRequest.displayName = 'proto.dex.grpc.integration.TransactionsByIdRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dex.grpc.integration.TransactionsByIdRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.TransactionsByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.TransactionsByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.TransactionsByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionIdsList: msg.getTransactionIdsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.TransactionsByIdRequest}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.TransactionsByIdRequest;
  return proto.dex.grpc.integration.TransactionsByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.TransactionsByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.TransactionsByIdRequest}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTransactionIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.TransactionsByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.TransactionsByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.TransactionsByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionIdsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes transaction_ids = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.getTransactionIdsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes transaction_ids = 1;
 * This is a type-conversion wrapper around `getTransactionIdsList()`
 * @return {!Array<string>}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.getTransactionIdsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTransactionIdsList()));
};


/**
 * repeated bytes transaction_ids = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionIdsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.getTransactionIdsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTransactionIdsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.setTransactionIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.dex.grpc.integration.TransactionsByIdRequest.prototype.addTransactionIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.dex.grpc.integration.TransactionsByIdRequest.prototype.clearTransactionIdsList = function() {
  this.setTransactionIdsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.AssetIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.AssetIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.AssetIdRequest.displayName = 'proto.dex.grpc.integration.AssetIdRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.AssetIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.AssetIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.AssetIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: msg.getAssetId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.AssetIdRequest}
 */
proto.dex.grpc.integration.AssetIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.AssetIdRequest;
  return proto.dex.grpc.integration.AssetIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.AssetIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.AssetIdRequest}
 */
proto.dex.grpc.integration.AssetIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.AssetIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.AssetIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.AssetIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes asset_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.AssetIdRequest.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes asset_id = 1;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.dex.grpc.integration.AssetIdRequest.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.AssetIdRequest.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.AssetIdRequest.prototype.setAssetId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.HasScriptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.HasScriptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.HasScriptResponse.displayName = 'proto.dex.grpc.integration.HasScriptResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.HasScriptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.HasScriptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.HasScriptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.HasScriptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    has: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.HasScriptResponse}
 */
proto.dex.grpc.integration.HasScriptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.HasScriptResponse;
  return proto.dex.grpc.integration.HasScriptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.HasScriptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.HasScriptResponse}
 */
proto.dex.grpc.integration.HasScriptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.HasScriptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.HasScriptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.HasScriptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.HasScriptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHas();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool has = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dex.grpc.integration.HasScriptResponse.prototype.getHas = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.dex.grpc.integration.HasScriptResponse.prototype.setHas = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.RunScriptResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_);
};
goog.inherits(proto.dex.grpc.integration.RunScriptResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.RunScriptResponse.displayName = 'proto.dex.grpc.integration.RunScriptResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dex.grpc.integration.RunScriptResponse.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.dex.grpc.integration.RunScriptResponse.ResultCase = {
  RESULT_NOT_SET: 0,
  WRONG_INPUT: 1,
  SCRIPT_ERROR: 2,
  UNEXPECTED_RESULT: 3,
  EXCEPTION: 4,
  DENIED: 5
};

/**
 * @return {proto.dex.grpc.integration.RunScriptResponse.ResultCase}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getResultCase = function() {
  return /** @type {proto.dex.grpc.integration.RunScriptResponse.ResultCase} */(jspb.Message.computeOneofCase(this, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.RunScriptResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.RunScriptResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunScriptResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    wrongInput: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scriptError: jspb.Message.getFieldWithDefault(msg, 2, ""),
    unexpectedResult: jspb.Message.getFieldWithDefault(msg, 3, ""),
    exception: (f = msg.getException()) && proto.dex.grpc.integration.Exception.toObject(includeInstance, f),
    denied: (f = msg.getDenied()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.RunScriptResponse}
 */
proto.dex.grpc.integration.RunScriptResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.RunScriptResponse;
  return proto.dex.grpc.integration.RunScriptResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.RunScriptResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.RunScriptResponse}
 */
proto.dex.grpc.integration.RunScriptResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWrongInput(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScriptError(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnexpectedResult(value);
      break;
    case 4:
      var value = new proto.dex.grpc.integration.Exception;
      reader.readMessage(value,proto.dex.grpc.integration.Exception.deserializeBinaryFromReader);
      msg.setException(value);
      break;
    case 5:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setDenied(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.RunScriptResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.RunScriptResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunScriptResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getException();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.dex.grpc.integration.Exception.serializeBinaryToWriter
    );
  }
  f = message.getDenied();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
};


/**
 * optional string wrong_input = 1;
 * @return {string}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getWrongInput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.dex.grpc.integration.RunScriptResponse.prototype.setWrongInput = function(value) {
  jspb.Message.setOneofField(this, 1, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.RunScriptResponse.prototype.clearWrongInput = function() {
  jspb.Message.setOneofField(this, 1, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.hasWrongInput = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string script_error = 2;
 * @return {string}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getScriptError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.dex.grpc.integration.RunScriptResponse.prototype.setScriptError = function(value) {
  jspb.Message.setOneofField(this, 2, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.RunScriptResponse.prototype.clearScriptError = function() {
  jspb.Message.setOneofField(this, 2, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.hasScriptError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string unexpected_result = 3;
 * @return {string}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getUnexpectedResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.dex.grpc.integration.RunScriptResponse.prototype.setUnexpectedResult = function(value) {
  jspb.Message.setOneofField(this, 3, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.RunScriptResponse.prototype.clearUnexpectedResult = function() {
  jspb.Message.setOneofField(this, 3, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.hasUnexpectedResult = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Exception exception = 4;
 * @return {?proto.dex.grpc.integration.Exception}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getException = function() {
  return /** @type{?proto.dex.grpc.integration.Exception} */ (
    jspb.Message.getWrapperField(this, proto.dex.grpc.integration.Exception, 4));
};


/** @param {?proto.dex.grpc.integration.Exception|undefined} value */
proto.dex.grpc.integration.RunScriptResponse.prototype.setException = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.RunScriptResponse.prototype.clearException = function() {
  this.setException(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.hasException = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Empty denied = 5;
 * @return {?proto.google.protobuf.Empty}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.getDenied = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 5));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.dex.grpc.integration.RunScriptResponse.prototype.setDenied = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.dex.grpc.integration.RunScriptResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.RunScriptResponse.prototype.clearDenied = function() {
  this.setDenied(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunScriptResponse.prototype.hasDenied = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.TransactionStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.TransactionStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.TransactionStatus.displayName = 'proto.dex.grpc.integration.TransactionStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.TransactionStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.TransactionStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.TransactionStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    height: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.TransactionStatus}
 */
proto.dex.grpc.integration.TransactionStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.TransactionStatus;
  return proto.dex.grpc.integration.TransactionStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.TransactionStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.TransactionStatus}
 */
proto.dex.grpc.integration.TransactionStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.dex.grpc.integration.TransactionStatus.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.TransactionStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.TransactionStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.TransactionStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.dex.grpc.integration.TransactionStatus.Status = {
  NOT_EXISTS: 0,
  UNCONFIRMED: 1,
  CONFIRMED: 2
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.TransactionStatus.prototype.setId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.dex.grpc.integration.TransactionStatus.Status}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.getStatus = function() {
  return /** @type {!proto.dex.grpc.integration.TransactionStatus.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.dex.grpc.integration.TransactionStatus.Status} value */
proto.dex.grpc.integration.TransactionStatus.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 height = 3;
 * @return {number}
 */
proto.dex.grpc.integration.TransactionStatus.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.TransactionStatus.prototype.setHeight = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.BroadcastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.BroadcastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.BroadcastRequest.displayName = 'proto.dex.grpc.integration.BroadcastRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.BroadcastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.BroadcastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.BroadcastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.BroadcastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.dex.grpc.integration.SignedExchangeTransaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.BroadcastRequest}
 */
proto.dex.grpc.integration.BroadcastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.BroadcastRequest;
  return proto.dex.grpc.integration.BroadcastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.BroadcastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.BroadcastRequest}
 */
proto.dex.grpc.integration.BroadcastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dex.grpc.integration.SignedExchangeTransaction;
      reader.readMessage(value,proto.dex.grpc.integration.SignedExchangeTransaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.BroadcastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.BroadcastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.BroadcastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.BroadcastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dex.grpc.integration.SignedExchangeTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional SignedExchangeTransaction transaction = 1;
 * @return {?proto.dex.grpc.integration.SignedExchangeTransaction}
 */
proto.dex.grpc.integration.BroadcastRequest.prototype.getTransaction = function() {
  return /** @type{?proto.dex.grpc.integration.SignedExchangeTransaction} */ (
    jspb.Message.getWrapperField(this, proto.dex.grpc.integration.SignedExchangeTransaction, 1));
};


/** @param {?proto.dex.grpc.integration.SignedExchangeTransaction|undefined} value */
proto.dex.grpc.integration.BroadcastRequest.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dex.grpc.integration.BroadcastRequest.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.BroadcastRequest.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.BroadcastResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.BroadcastResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.BroadcastResponse.displayName = 'proto.dex.grpc.integration.BroadcastResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.BroadcastResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.BroadcastResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.BroadcastResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.BroadcastResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isValid: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.BroadcastResponse}
 */
proto.dex.grpc.integration.BroadcastResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.BroadcastResponse;
  return proto.dex.grpc.integration.BroadcastResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.BroadcastResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.BroadcastResponse}
 */
proto.dex.grpc.integration.BroadcastResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.BroadcastResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.BroadcastResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.BroadcastResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.BroadcastResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_valid = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dex.grpc.integration.BroadcastResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.dex.grpc.integration.BroadcastResponse.prototype.setIsValid = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.IsFeatureActivatedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.IsFeatureActivatedRequest.displayName = 'proto.dex.grpc.integration.IsFeatureActivatedRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.IsFeatureActivatedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.IsFeatureActivatedRequest}
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.IsFeatureActivatedRequest;
  return proto.dex.grpc.integration.IsFeatureActivatedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.IsFeatureActivatedRequest}
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeatureId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.IsFeatureActivatedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 feature_id = 1;
 * @return {number}
 */
proto.dex.grpc.integration.IsFeatureActivatedRequest.prototype.getFeatureId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.IsFeatureActivatedRequest.prototype.setFeatureId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.IsFeatureActivatedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.IsFeatureActivatedResponse.displayName = 'proto.dex.grpc.integration.IsFeatureActivatedResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.IsFeatureActivatedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isActivated: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.IsFeatureActivatedResponse}
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.IsFeatureActivatedResponse;
  return proto.dex.grpc.integration.IsFeatureActivatedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.IsFeatureActivatedResponse}
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActivated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.IsFeatureActivatedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.IsFeatureActivatedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsActivated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_activated = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dex.grpc.integration.IsFeatureActivatedResponse.prototype.getIsActivated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.dex.grpc.integration.IsFeatureActivatedResponse.prototype.setIsActivated = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.AssetDescriptionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dex.grpc.integration.AssetDescriptionResponse.oneofGroups_);
};
goog.inherits(proto.dex.grpc.integration.AssetDescriptionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.AssetDescriptionResponse.displayName = 'proto.dex.grpc.integration.AssetDescriptionResponse';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dex.grpc.integration.AssetDescriptionResponse.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.MaybeDescriptionCase = {
  MAYBE_DESCRIPTION_NOT_SET: 0,
  DESCRIPTION: 1
};

/**
 * @return {proto.dex.grpc.integration.AssetDescriptionResponse.MaybeDescriptionCase}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.getMaybeDescriptionCase = function() {
  return /** @type {proto.dex.grpc.integration.AssetDescriptionResponse.MaybeDescriptionCase} */(jspb.Message.computeOneofCase(this, proto.dex.grpc.integration.AssetDescriptionResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.AssetDescriptionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.AssetDescriptionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetDescriptionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: (f = msg.getDescription()) && proto.dex.grpc.integration.AssetDescription.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.AssetDescriptionResponse}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.AssetDescriptionResponse;
  return proto.dex.grpc.integration.AssetDescriptionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.AssetDescriptionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.AssetDescriptionResponse}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dex.grpc.integration.AssetDescription;
      reader.readMessage(value,proto.dex.grpc.integration.AssetDescription.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.AssetDescriptionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.AssetDescriptionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetDescriptionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dex.grpc.integration.AssetDescription.serializeBinaryToWriter
    );
  }
};


/**
 * optional AssetDescription description = 1;
 * @return {?proto.dex.grpc.integration.AssetDescription}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.getDescription = function() {
  return /** @type{?proto.dex.grpc.integration.AssetDescription} */ (
    jspb.Message.getWrapperField(this, proto.dex.grpc.integration.AssetDescription, 1));
};


/** @param {?proto.dex.grpc.integration.AssetDescription|undefined} value */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.setDescription = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.dex.grpc.integration.AssetDescriptionResponse.oneofGroups_[0], value);
};


proto.dex.grpc.integration.AssetDescriptionResponse.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.AssetDescriptionResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.AssetDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.AssetDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.AssetDescription.displayName = 'proto.dex.grpc.integration.AssetDescription';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.AssetDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.AssetDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.AssetDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: msg.getName_asB64(),
    decimals: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hasScript: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.AssetDescription}
 */
proto.dex.grpc.integration.AssetDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.AssetDescription;
  return proto.dex.grpc.integration.AssetDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.AssetDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.AssetDescription}
 */
proto.dex.grpc.integration.AssetDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDecimals(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.AssetDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.AssetDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.AssetDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.AssetDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHasScript();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes name = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.AssetDescription.prototype.getName = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes name = 1;
 * This is a type-conversion wrapper around `getName()`
 * @return {string}
 */
proto.dex.grpc.integration.AssetDescription.prototype.getName_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getName()));
};


/**
 * optional bytes name = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getName()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.AssetDescription.prototype.getName_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getName()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.AssetDescription.prototype.setName = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional int32 decimals = 2;
 * @return {number}
 */
proto.dex.grpc.integration.AssetDescription.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.AssetDescription.prototype.setDecimals = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool has_script = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dex.grpc.integration.AssetDescription.prototype.getHasScript = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.dex.grpc.integration.AssetDescription.prototype.setHasScript = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.RunAssetScriptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.RunAssetScriptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.RunAssetScriptRequest.displayName = 'proto.dex.grpc.integration.RunAssetScriptRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.RunAssetScriptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.RunAssetScriptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunAssetScriptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: msg.getAssetId_asB64(),
    transaction: (f = msg.getTransaction()) && proto.dex.grpc.integration.SignedExchangeTransaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.RunAssetScriptRequest}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.RunAssetScriptRequest;
  return proto.dex.grpc.integration.RunAssetScriptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.RunAssetScriptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.RunAssetScriptRequest}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    case 2:
      var value = new proto.dex.grpc.integration.SignedExchangeTransaction;
      reader.readMessage(value,proto.dex.grpc.integration.SignedExchangeTransaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.RunAssetScriptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.RunAssetScriptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunAssetScriptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dex.grpc.integration.SignedExchangeTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes asset_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes asset_id = 1;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.setAssetId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional SignedExchangeTransaction transaction = 2;
 * @return {?proto.dex.grpc.integration.SignedExchangeTransaction}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.getTransaction = function() {
  return /** @type{?proto.dex.grpc.integration.SignedExchangeTransaction} */ (
    jspb.Message.getWrapperField(this, proto.dex.grpc.integration.SignedExchangeTransaction, 2));
};


/** @param {?proto.dex.grpc.integration.SignedExchangeTransaction|undefined} value */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dex.grpc.integration.RunAssetScriptRequest.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunAssetScriptRequest.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.RunAddressScriptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.RunAddressScriptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.RunAddressScriptRequest.displayName = 'proto.dex.grpc.integration.RunAddressScriptRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.RunAddressScriptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.RunAddressScriptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunAddressScriptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: msg.getAddress_asB64(),
    order: (f = msg.getOrder()) && order_pb.Order.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.RunAddressScriptRequest}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.RunAddressScriptRequest;
  return proto.dex.grpc.integration.RunAddressScriptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.RunAddressScriptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.RunAddressScriptRequest}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddress(value);
      break;
    case 2:
      var value = new order_pb.Order;
      reader.readMessage(value,order_pb.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.RunAddressScriptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.RunAddressScriptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.RunAddressScriptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      order_pb.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes address = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.getAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes address = 1;
 * This is a type-conversion wrapper around `getAddress()`
 * @return {string}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.getAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddress()));
};


/**
 * optional bytes address = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddress()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.getAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional orion.Order order = 2;
 * @return {?proto.orion.Order}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.getOrder = function() {
  return /** @type{?proto.orion.Order} */ (
    jspb.Message.getWrapperField(this, order_pb.Order, 2));
};


/** @param {?proto.orion.Order|undefined} value */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.setOrder = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.dex.grpc.integration.RunAddressScriptRequest.prototype.clearOrder = function() {
  this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.RunAddressScriptRequest.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.HasAddressScriptRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.HasAddressScriptRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.HasAddressScriptRequest.displayName = 'proto.dex.grpc.integration.HasAddressScriptRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.HasAddressScriptRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.HasAddressScriptRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.HasAddressScriptRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: msg.getAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.HasAddressScriptRequest}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.HasAddressScriptRequest;
  return proto.dex.grpc.integration.HasAddressScriptRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.HasAddressScriptRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.HasAddressScriptRequest}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.HasAddressScriptRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.HasAddressScriptRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.HasAddressScriptRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes address = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.getAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes address = 1;
 * This is a type-conversion wrapper around `getAddress()`
 * @return {string}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.getAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddress()));
};


/**
 * optional bytes address = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddress()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.getAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.HasAddressScriptRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.SpendableAssetBalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.SpendableAssetBalanceRequest.displayName = 'proto.dex.grpc.integration.SpendableAssetBalanceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.SpendableAssetBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: msg.getAddress_asB64(),
    assetId: msg.getAssetId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.SpendableAssetBalanceRequest}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.SpendableAssetBalanceRequest;
  return proto.dex.grpc.integration.SpendableAssetBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.SpendableAssetBalanceRequest}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssetId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.SpendableAssetBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAssetId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes address = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes address = 1;
 * This is a type-conversion wrapper around `getAddress()`
 * @return {string}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddress()));
};


/**
 * optional bytes address = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddress()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes asset_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAssetId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes asset_id = 2;
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {string}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAssetId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssetId()));
};


/**
 * optional bytes asset_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssetId()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.getAssetId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssetId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.SpendableAssetBalanceRequest.prototype.setAssetId = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.SpendableAssetBalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.SpendableAssetBalanceResponse.displayName = 'proto.dex.grpc.integration.SpendableAssetBalanceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.SpendableAssetBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.SpendableAssetBalanceResponse}
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.SpendableAssetBalanceResponse;
  return proto.dex.grpc.integration.SpendableAssetBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.SpendableAssetBalanceResponse}
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.SpendableAssetBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.SpendableAssetBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 balance = 1;
 * @return {number}
 */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.SpendableAssetBalanceResponse.prototype.setBalance = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.ForgedOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.ForgedOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.ForgedOrderRequest.displayName = 'proto.dex.grpc.integration.ForgedOrderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.ForgedOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.ForgedOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ForgedOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderId: msg.getOrderId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.ForgedOrderRequest}
 */
proto.dex.grpc.integration.ForgedOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.ForgedOrderRequest;
  return proto.dex.grpc.integration.ForgedOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.ForgedOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.ForgedOrderRequest}
 */
proto.dex.grpc.integration.ForgedOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.ForgedOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.ForgedOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ForgedOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes order_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.getOrderId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes order_id = 1;
 * This is a type-conversion wrapper around `getOrderId()`
 * @return {string}
 */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.getOrderId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOrderId()));
};


/**
 * optional bytes order_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOrderId()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.getOrderId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOrderId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.ForgedOrderRequest.prototype.setOrderId = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.ForgedOrderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.ForgedOrderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.ForgedOrderResponse.displayName = 'proto.dex.grpc.integration.ForgedOrderResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.ForgedOrderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.ForgedOrderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.ForgedOrderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ForgedOrderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isForged: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.ForgedOrderResponse}
 */
proto.dex.grpc.integration.ForgedOrderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.ForgedOrderResponse;
  return proto.dex.grpc.integration.ForgedOrderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.ForgedOrderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.ForgedOrderResponse}
 */
proto.dex.grpc.integration.ForgedOrderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsForged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.ForgedOrderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.ForgedOrderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.ForgedOrderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ForgedOrderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsForged();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_forged = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.dex.grpc.integration.ForgedOrderResponse.prototype.getIsForged = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.dex.grpc.integration.ForgedOrderResponse.prototype.setIsForged = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.Exception = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dex.grpc.integration.Exception, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.Exception.displayName = 'proto.dex.grpc.integration.Exception';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.Exception.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.Exception.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.Exception} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.Exception.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.Exception}
 */
proto.dex.grpc.integration.Exception.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.Exception;
  return proto.dex.grpc.integration.Exception.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.Exception} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.Exception}
 */
proto.dex.grpc.integration.Exception.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.Exception.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.Exception.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.Exception} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.Exception.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dex.grpc.integration.Exception.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.dex.grpc.integration.Exception.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.dex.grpc.integration.Exception.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.dex.grpc.integration.Exception.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.SignedExchangeTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dex.grpc.integration.SignedExchangeTransaction.repeatedFields_, null);
};
goog.inherits(proto.dex.grpc.integration.SignedExchangeTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.SignedExchangeTransaction.displayName = 'proto.dex.grpc.integration.SignedExchangeTransaction';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dex.grpc.integration.SignedExchangeTransaction.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.SignedExchangeTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.SignedExchangeTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SignedExchangeTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.dex.grpc.integration.ExchangeTransaction.toObject(includeInstance, f),
    proofsList: msg.getProofsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.SignedExchangeTransaction}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.SignedExchangeTransaction;
  return proto.dex.grpc.integration.SignedExchangeTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.SignedExchangeTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.SignedExchangeTransaction}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dex.grpc.integration.ExchangeTransaction;
      reader.readMessage(value,proto.dex.grpc.integration.ExchangeTransaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addProofs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.SignedExchangeTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.SignedExchangeTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.SignedExchangeTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dex.grpc.integration.ExchangeTransaction.serializeBinaryToWriter
    );
  }
  f = message.getProofsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional ExchangeTransaction transaction = 1;
 * @return {?proto.dex.grpc.integration.ExchangeTransaction}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.getTransaction = function() {
  return /** @type{?proto.dex.grpc.integration.ExchangeTransaction} */ (
    jspb.Message.getWrapperField(this, proto.dex.grpc.integration.ExchangeTransaction, 1));
};


/** @param {?proto.dex.grpc.integration.ExchangeTransaction|undefined} value */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dex.grpc.integration.SignedExchangeTransaction.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated bytes proofs = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.getProofsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes proofs = 2;
 * This is a type-conversion wrapper around `getProofsList()`
 * @return {!Array<string>}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.getProofsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getProofsList()));
};


/**
 * repeated bytes proofs = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.getProofsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getProofsList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.setProofsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.dex.grpc.integration.SignedExchangeTransaction.prototype.addProofs = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.dex.grpc.integration.SignedExchangeTransaction.prototype.clearProofsList = function() {
  this.setProofsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dex.grpc.integration.ExchangeTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dex.grpc.integration.ExchangeTransaction.oneofGroups_);
};
goog.inherits(proto.dex.grpc.integration.ExchangeTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dex.grpc.integration.ExchangeTransaction.displayName = 'proto.dex.grpc.integration.ExchangeTransaction';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dex.grpc.integration.ExchangeTransaction.oneofGroups_ = [[107]];

/**
 * @enum {number}
 */
proto.dex.grpc.integration.ExchangeTransaction.DataCase = {
  DATA_NOT_SET: 0,
  EXCHANGE: 107
};

/**
 * @return {proto.dex.grpc.integration.ExchangeTransaction.DataCase}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getDataCase = function() {
  return /** @type {proto.dex.grpc.integration.ExchangeTransaction.DataCase} */(jspb.Message.computeOneofCase(this, proto.dex.grpc.integration.ExchangeTransaction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.dex.grpc.integration.ExchangeTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dex.grpc.integration.ExchangeTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ExchangeTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    senderPublicKey: msg.getSenderPublicKey_asB64(),
    fee: (f = msg.getFee()) && order_pb.Amount.toObject(includeInstance, f),
    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    version: jspb.Message.getFieldWithDefault(msg, 5, 0),
    exchange: (f = msg.getExchange()) && order_pb.ExchangeTransactionData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dex.grpc.integration.ExchangeTransaction}
 */
proto.dex.grpc.integration.ExchangeTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dex.grpc.integration.ExchangeTransaction;
  return proto.dex.grpc.integration.ExchangeTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dex.grpc.integration.ExchangeTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dex.grpc.integration.ExchangeTransaction}
 */
proto.dex.grpc.integration.ExchangeTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSenderPublicKey(value);
      break;
    case 3:
      var value = new order_pb.Amount;
      reader.readMessage(value,order_pb.Amount.deserializeBinaryFromReader);
      msg.setFee(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 107:
      var value = new order_pb.ExchangeTransactionData;
      reader.readMessage(value,order_pb.ExchangeTransactionData.deserializeBinaryFromReader);
      msg.setExchange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dex.grpc.integration.ExchangeTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dex.grpc.integration.ExchangeTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dex.grpc.integration.ExchangeTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSenderPublicKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getFee();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      order_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExchange();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      order_pb.ExchangeTransactionData.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 chain_id = 1;
 * @return {number}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setChainId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes sender_public_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getSenderPublicKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sender_public_key = 2;
 * This is a type-conversion wrapper around `getSenderPublicKey()`
 * @return {string}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getSenderPublicKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSenderPublicKey()));
};


/**
 * optional bytes sender_public_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSenderPublicKey()`
 * @return {!Uint8Array}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getSenderPublicKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSenderPublicKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setSenderPublicKey = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional orion.Amount fee = 3;
 * @return {?proto.orion.Amount}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getFee = function() {
  return /** @type{?proto.orion.Amount} */ (
    jspb.Message.getWrapperField(this, order_pb.Amount, 3));
};


/** @param {?proto.orion.Amount|undefined} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setFee = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.dex.grpc.integration.ExchangeTransaction.prototype.clearFee = function() {
  this.setFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.hasFee = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 timestamp = 4;
 * @return {number}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 version = 5;
 * @return {number}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional orion.ExchangeTransactionData exchange = 107;
 * @return {?proto.orion.ExchangeTransactionData}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.getExchange = function() {
  return /** @type{?proto.orion.ExchangeTransactionData} */ (
    jspb.Message.getWrapperField(this, order_pb.ExchangeTransactionData, 107));
};


/** @param {?proto.orion.ExchangeTransactionData|undefined} value */
proto.dex.grpc.integration.ExchangeTransaction.prototype.setExchange = function(value) {
  jspb.Message.setOneofWrapperField(this, 107, proto.dex.grpc.integration.ExchangeTransaction.oneofGroups_[0], value);
};


proto.dex.grpc.integration.ExchangeTransaction.prototype.clearExchange = function() {
  this.setExchange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dex.grpc.integration.ExchangeTransaction.prototype.hasExchange = function() {
  return jspb.Message.getField(this, 107) != null;
};


goog.object.extend(exports, proto.dex.grpc.integration);
